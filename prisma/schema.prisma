generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgres"
    url      = env("DATABASE_URL")
}

// NextAuth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? // @db.Text
    access_token      String? // @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? // @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model Apps {
    id                               String @id @default(cuid())
    name                             String
    key                              String
    secret                           String
    max_connections                  Int
    enable_client_messages           Int    @db.SmallInt
    enabled                          Int    @db.SmallInt
    enable_user_authentication       Int    @db.SmallInt
    max_backend_events_per_sec       Int
    max_client_events_per_sec        Int
    max_read_req_per_sec             Int
    max_presence_members_per_channel Int?
    max_presence_member_size_in_kb   Int?
    max_channel_name_length          Int?
    max_event_channels_at_once       Int?
    max_event_name_length            Int?
    max_event_payload_in_kb          Int?
    max_event_batch_size             Int?
    webhooks                         Json?

    @@map(name: "apps")
}
